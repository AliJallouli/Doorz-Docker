// src/app/core/errors/error-context.map.ts

export const errorContextMap: Record<string, string> = {
  // LOGIN
  INVALID_LOGIN: 'LOGIN.ERROR.BACKEND',
  TOO_MANY_FAILED_ATTEMPTS: 'LOGIN.ERROR.BACKEND',
  LOGIN_ATTEMPT_SAVE_FAILED: 'LOGIN.ERROR.BACKEND',
  LOGIN_FINALIZATION_FAILED: 'LOGIN.ERROR.BACKEND',

  // LOGOUT
  REFRESH_TOKEN_REQUIRED: 'LOGIN.ERROR.BACKEND',
  REFRESH_TOKEN_INVALID: 'LOGIN.ERROR.BACKEND',
  LOGOUT_FAILED: 'LOGIN.ERROR.BACKEND',

  // === SHARED COMMON BACKEND ERRORS ===
  EMAIL_ALREADY_USED: 'SHARED.ERROR.BACKEND',
  INVALID_EMAIL: 'SHARED.ERROR.BACKEND',
  INTERNAL_SERVER_ERROR: 'SHARED.ERROR.BACKEND',
  USER_NOT_FOUND: 'SHARED.ERROR.BACKEND',
  EMAIL_SENDING_FAILED: 'SHARED.ERROR.BACKEND',
  TOO_MANY_OTP_RESENDS: 'SHARED.ERROR.BACKEND',

  // === EMAIL CONFIRMATION ===
  EMAIL_CONFIRMATION_FAILED: 'CONFIRMEMAIL.ERROR.BACKEND',
  EMAIL_CONFIRMATION_INVALID_TOKEN: 'CONFIRMEMAIL.ERROR.BACKEND',
  EMAIL_ALREADY_CONFIRMED: 'CONFIRMEMAIL.ERROR.BACKEND',
  EMAIL_CONFIRMATION_TOO_EARLY: 'CONFIRMEMAIL.ERROR.BACKEND',
  EMAIL_CONFIRMATION_NOT_FOUND: 'CONFIRMEMAIL.ERROR.BACKEND',
  EMAIL_CONFIRMATION_TOKEN_EXPIRED: 'CONFIRMEMAIL.ERROR.BACKEND',
  OTP_TOO_MANY_ATTEMPTS:"CONFIRMEMAIL.ERROR.BACKEND",

  // RESETPASSWORD
  PASSWORD_RESET_TOKEN_INVALID: 'RESETPASSWORD.ERROR.BACKEND',
  PASSWORD_RESET_TOKEN_EXPIRED: 'RESETPASSWORD.ERROR.BACKEND',
  PASSWORD_RESET_TOKEN_USED: 'RESETPASSWORD.ERROR.BACKEND',
  PASSWORD_RESET_FAILED: 'RESETPASSWORD.ERROR.BACKEND',
  PASSWORD_RESET_ALREADY_REQUESTED: 'RESETPASSWORD.ERROR.BACKEND',
  PASSWORD_RESET_SAME_AS_OLD: 'RESETPASSWORD.ERROR.BACKEND',
  TOO_MANY_TOKEN_REQUESTS:'RESETPASSWORD.ERROR.BACKEND',




  // === INVITATION COLLEAGUE ===
  INVITER_NOT_ADMIN: 'INVITE.ERROR.BACKEND',
  INVITER_NOT_LINKED_TO_ENTITY: 'INVITE.ERROR.BACKEND',
  ROLE_NOT_VALID_FOR_ENTITY_TYPE: 'INVITE.ERROR.BACKEND',
  INVITATION_CREATION_FAILED: 'INVITE.ERROR.BACKEND',

  // === INVITATION COMPANY ===
  INVALID_COMPANY_INPUT: 'INVITE.ERROR.BACKEND',
  COMPANY_NAME_ALREADY_USED: 'INVITE.ERROR.BACKEND',
  COMPANY_CREATION_FAILED: 'INVITE.ERROR.BACKEND',

  // === INVITATION INSTITUTION ===
  INVALID_INSTITUTION_INPUT: 'INVITE.ERROR.BACKEND',
  INSTITUTION_NAME_ALREADY_USED: 'INVITE.ERROR.BACKEND',
  INSTITUTION_TYPE_NOT_FOUND: 'INVITE.ERROR.BACKEND',
  INSTITUTION_CREATION_FAILED: 'INVITE.ERROR.BACKEND',

  // === ENTITIES ===
  ENTITY_CREATION_FAILED: 'INVITE.ERROR.BACKEND',
  ENTITY_NAME_MISSING: 'INVITE.ERROR.BACKEND',
  ENTITY_TYPE_NOT_FOUND: 'INVITE.ERROR.BACKEND',
  ADMIN_ROLE_NOT_FOUND: 'INVITE.ERROR.BACKEND',

  // === REGISTER FROM INVITE ===
  INVITATION_INVALID: 'REGISTERFROMINVITE.ERROR.BACKEND',
  INVITATION_DETAILS_MISSING: 'REGISTERFROMINVITE.ERROR.BACKEND',
  USER_ALREADY_EXISTS: 'REGISTERFROMINVITE.ERROR.BACKEND',
  REGISTRATION_FAILED: 'REGISTERFROMINVITE.ERROR.BACKEND',
  ENTITY_TYPE_INVALID: 'REGISTERFROMINVITE.ERROR.BACKEND',
  ENTITY_TYPE_UNSUPPORTED: 'REGISTERFROMINVITE.ERROR.BACKEND',



};
